<!DOCTYPE html>
<html lang="pt-br">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title><%= title || 'TaskWise' %></title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css">
  <link rel="stylesheet" href="/public/css/app.css">
</head>
<body>
  <nav class="navbar is-dark" role="navigation" aria-label="main navigation">
    <div class="navbar-brand">
      <a class="navbar-item" href="/dashboard">TaskWise</a>
    </div>
    <div class="navbar-menu">
      <% if (currentUser) { %>
      <div class="navbar-start">
        <a class="navbar-item" href="/dashboard">Dashboard</a>
        <a class="navbar-item" href="/tasks">Tarefas</a>
        <a class="navbar-item" href="/sprints">Sprints</a>
        <% if (currentUser && currentUser.role==='Admin') { %>
          <a class="navbar-item" href="/users">Usuários</a>
        <% } %>
      </div>
      <div class="navbar-end">
        <div class="navbar-item has-text-white">
          Olá,&nbsp;<strong class="has-text-white has-text-weight-semibold" style="cursor: pointer;" onclick="openUserModal()"><%= currentUser.name %></strong> (<span class="has-text-white"><%= currentUser.role %></span>)
        </div>
        <div class="navbar-item">
          <form method="post" action="/logout">
            <button class="button is-light" type="submit">Sair</button>
          </form>
        </div>
      </div>
      <% } %>
    </div>
  </nav>

  <!-- Modal de informações do usuário -->
  <div class="modal" id="userModal">
    <div class="modal-background" onclick="closeUserModal()"></div>
    <div class="modal-card">
      <header class="modal-card-head">
        <p class="modal-card-title">Informações do Usuário</p>
        <button class="delete" aria-label="close" onclick="closeUserModal()"></button>
      </header>
      <section class="modal-card-body" id="userModalContent">
        <div class="has-text-centered">
          <div class="loader"></div>
          <p>Carregando informações...</p>
        </div>
      </section>
      <footer class="modal-card-foot">
        <button class="button" onclick="closeUserModal()">Fechar</button>
      </footer>
    </div>
  </div>

  <section class="section">
    <div class="container">
      <% if (flash && flash.length) { %>
        <% flash.forEach(f => { %>
          <div class="notification is-<%= f.type %>"><%= f.message %></div>
        <% }) %>
      <% } %>

      <%- body %>
    </div>
  </section>

  <script>
    // Capturar timezone do navegador e enviar ao servidor (uma vez por sessão)
    (function() {
      try {
        const tz = Intl.DateTimeFormat().resolvedOptions().timeZone;
        if (tz && tz !== 'UTC') {
          fetch('/tz', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ tz: tz })
          }).catch(() => {});
        }
      } catch (e) {}
    })();

    // Funções para abrir/fechar modal de usuário
    function openUserModal() {
      const modal = document.getElementById('userModal');
      modal.classList.add('is-active');
      loadUserInfo();
    }

    function closeUserModal() {
      const modal = document.getElementById('userModal');
      modal.classList.remove('is-active');
    }

    async function loadUserInfo() {
      const content = document.getElementById('userModalContent');
      content.innerHTML = '<div class="has-text-centered"><div class="loader"></div><p>Carregando informações...</p></div>';

      try {
        const response = await fetch('/users/me', {
          credentials: 'same-origin',
          headers: {
            'Content-Type': 'application/json'
          }
        });
        
        if (!response.ok) {
          const errorData = await response.json().catch(() => ({}));
          throw new Error(errorData.error || `Erro ${response.status}: ${response.statusText}`);
        }
        
        const user = await response.json();
        
        if (!user || !user.id) {
          throw new Error('Dados do usuário não encontrados');
        }
        
        const roleText = user.role === 'Admin' ? 'Administrador' : 'Leitura/Escrita';
        
        let createdAt = 'N/A';
        // Verificar diferentes possíveis nomes do campo de data
        const dateField = user.createdAt || user.created_at || user.createdAtDate;
        if (dateField) {
          try {
            // Se já está no formato DD-MM-YYYY HH:mm, apenas usa diretamente
            if (typeof dateField === 'string' && /^\d{2}-\d{2}-\d{4} \d{2}:\d{2}$/.test(dateField)) {
              createdAt = dateField;
            } else {
              // Tenta fazer parse de outros formatos (ISO, etc)
              const date = new Date(dateField);
              if (!isNaN(date.getTime())) {
                createdAt = date.toLocaleDateString('pt-BR', {
                  day: '2-digit',
                  month: '2-digit',
                  year: 'numeric',
                  hour: '2-digit',
                  minute: '2-digit'
                });
              } else {
                // Se não conseguiu parsear, usa o valor original
                createdAt = String(dateField);
              }
            }
          } catch (e) {
            console.error('Erro ao formatar data:', e, 'Valor original:', dateField);
            createdAt = String(dateField); // Mostra a data original se não conseguir formatar
          }
        }

        content.innerHTML = `
          <div class="content">
            <div class="field">
              <label class="label">Nome</label>
              <div class="control">
                <p class="has-text-weight-semibold">${user.name || 'N/A'}</p>
              </div>
            </div>
            <div class="field">
              <label class="label">Email</label>
              <div class="control">
                <p>${user.email || 'N/A'}</p>
              </div>
            </div>
            <div class="field">
              <label class="label">Papel</label>
              <div class="control">
                <span class="tag ${user.role === 'Admin' ? 'is-danger' : 'is-info'}">${roleText}</span>
              </div>
            </div>
            <div class="field">
              <label class="label">ID</label>
              <div class="control">
                <p class="has-text-grey is-size-7">${user.id || 'N/A'}</p>
              </div>
            </div>
            <div class="field">
              <label class="label">Data de Criação</label>
              <div class="control">
                <p>${createdAt}</p>
              </div>
            </div>
          </div>
        `;
      } catch (error) {
        console.error('Erro ao carregar informações do usuário:', error);
        content.innerHTML = `
          <div class="notification is-danger">
            <p><strong>Erro ao carregar informações do usuário</strong></p>
            <p>${error.message || 'Erro desconhecido'}</p>
            <p class="is-size-7 mt-2">Por favor, tente novamente ou recarregue a página.</p>
          </div>
        `;
      }
    }

    // Fechar modal com ESC
    document.addEventListener('keydown', function(event) {
      if (event.key === 'Escape') {
        closeUserModal();
      }
    });
  </script>

</body>
</html>


